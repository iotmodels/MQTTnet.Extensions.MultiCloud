// <auto-generated />

using Google.Protobuf;
using mqtt_grpc_device_protos;
using MQTTnet.Client;
using MQTTnet.Extensions.MultiCloud;
using MQTTnet.Extensions.MultiCloud.BrokerIoTClient;
using System.ComponentModel.Design;
using System.Threading;
using System.Threading.Tasks;

namespace mqtt_grpc_device;

internal class mqtt_grpc_sample_device 
{
    internal IMqttClient Connection;

    internal Properties Props;
    internal IWritableProperty<Properties, ack> Interval;
    internal ICommand<echoRequest,echoResponse> Echo;
    internal ICommand<getRuntimeStatsRequest, getRuntimeStatsResponse> GetRuntimeStats;

    internal ITelemetry<Telemetries> AllTelemetries;
    internal IReadOnlyProperty<Properties> AllProperties;

    internal mqtt_grpc_sample_device(IMqttClient client) 
    {
        Connection = client;
        Props = new Properties();
        AllProperties = new AllPropertiesProtobuff<Properties>(client);    
        AllTelemetries = new AllTelemetriesProtobuff<Telemetries>(client);
        Interval = new WritablePropertyProtobuff<Properties, ack>(client, "interval", Properties.Parser);
        Echo = new CommandProtobuff<echoRequest, echoResponse>(client, "echo", echoRequest.Parser);
        GetRuntimeStats = new CommandProtobuff<getRuntimeStatsRequest, getRuntimeStatsResponse>(client, "getRuntimeStats", getRuntimeStatsRequest.Parser);
    }
}
