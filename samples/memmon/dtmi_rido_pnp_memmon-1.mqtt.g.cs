//  <auto-generated/> 

using MQTTnet.Client;
using MQTTnet.Extensions.MultiCloud;
using MQTTnet.Extensions.MultiCloud.BrokerIoTClient;


namespace dtmi_rido_pnp_memmon.mqtt;

public class memmon : Imemmon
{
    public IMqttClient Connection { get; set; }
    public string InitialState { get; set; }
    public IReadOnlyProperty<DateTime> Property_started { get; set; }
    public IWritableProperty<bool> Property_enabled { get; set; }
    public IWritableProperty<int> Property_interval { get; set; }
    public ITelemetry<double> Telemetry_workingSet { get; set; }
    public ICommand<Cmd_getRuntimeStats_Request, Cmd_getRuntimeStats_Response> Command_getRuntimeStats { get; set; }

    internal memmon(IMqttClient c) 
    {
        Connection = c;
        Property_started = new ReadOnlyPropertyUTFJson<DateTime>(c, "started");
        Property_interval = new WritablePropertyUTFJson<int>(c, "interval");
        Property_enabled = new WritablePropertyUTFJson<bool>(c, "enabled");
        Telemetry_workingSet = new TelemetryUTF8Json<double>(c, "workingSet");
        Command_getRuntimeStats = new CommandUTF8Json<Cmd_getRuntimeStats_Request, Cmd_getRuntimeStats_Response>(c, "getRuntimeStats");
    }
}