name: samples-docker

on:
  workflow_dispatch:
  push:
    branches: [ "master", "dev" ]
    paths:
      - 'samples/**'

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    steps:
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - name: mqtt-connection docker
      run: dotnet publish samples/mqtt-connection -c Release --os linux --arch x64 /t:PublishContainer /p:ContainerImageName=ghcr.io/iotmodels/mqtt-connection /p:ContainerImageTag=latest

    - name: mqtt-connection push
      run: docker push ghcr.io/iotmodels/mqtt-connection:latest

    - name: memmon docker
      run: docker build . --file samples/memmon/Dockerfile --tag ghcr.io/iotmodels/memmon:x64

    - name: memmon docker push 
      run: docker push ghcr.io/iotmodels/memmon:x64

    - name: pi-sense docker
      run: docker build . --file samples/pi-sense-device/Dockerfile --tag ghcr.io/iotmodels/pi-sense-device:x64

    - name: pi-sense docker push 
      run: docker push ghcr.io/iotmodels/pi-sense-device:x64

    - name: grpc docker
      run: docker build -f samples/mqtt-grpc-device/Dockerfile . -t ghcr.io/iotmodels/mqtt-grpc-device:latest

    - name: grpc push
      run: docker push ghcr.io/iotmodels/mqtt-grpc-device:latest


    #- name: Build the Docker image ARM
    #  run: docker build . --file samples/memmon/Dockerfile.pi --tag ghcr.io/ridomin/memmon:arm
    #- name: push image arm
    #  run: docker push ghcr.io/iotmodels/memmon:arm